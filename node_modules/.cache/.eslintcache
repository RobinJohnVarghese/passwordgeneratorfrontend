[{"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\index.js":"1","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\store.js":"2","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\App.js":"3","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Generator.jsx":"4","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Register.jsx":"5","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Login.jsx":"6","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\users.js":"7","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\saved_password\\SavedPasswords.jsx":"8","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\saved_password\\SavePassword.jsx":"9","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\config.js":"10","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Checkbox.js":"11","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\deleteSavedPassword.js":"12","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\viewSavedPasswords.js":"13","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\savePasswords.js":"14"},{"size":351,"mtime":1714572096123,"results":"15","hashOfConfig":"16"},{"size":259,"mtime":1714572096184,"results":"17","hashOfConfig":"16"},{"size":1224,"mtime":1714572096075,"results":"18","hashOfConfig":"16"},{"size":7269,"mtime":1715002291746,"results":"19","hashOfConfig":"16"},{"size":3559,"mtime":1714572096345,"results":"20","hashOfConfig":"16"},{"size":2565,"mtime":1714572096331,"results":"21","hashOfConfig":"16"},{"size":7399,"mtime":1714572096238,"results":"22","hashOfConfig":"16"},{"size":2534,"mtime":1714572096401,"results":"23","hashOfConfig":"16"},{"size":2540,"mtime":1714572096374,"results":"24","hashOfConfig":"16"},{"size":114,"mtime":1714572096108,"results":"25","hashOfConfig":"16"},{"size":198,"mtime":1714572096275,"results":"26","hashOfConfig":"16"},{"size":698,"mtime":1714572096207,"results":"27","hashOfConfig":"16"},{"size":716,"mtime":1714572096255,"results":"28","hashOfConfig":"16"},{"size":742,"mtime":1714572096222,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7642ym",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\index.js",[],["65","66"],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\store.js",[],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\App.js",["67","68"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Login from './components/Login';\nimport Generator from './components/Generator';\nimport Register from './components/Register';\nimport SavedPasswords from './components/saved_password/SavedPasswords';\nimport SavePassword from './components/saved_password/SavePassword';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useDispatch } from 'react-redux';\nimport { checkAuth } from './api/features/users';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const access = localStorage.getItem('access_token');\n\n  useEffect(()=> {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <ToastContainer/>\n      <Routes>\n          <Route exact path=\"/\" element={< Generator/>} />\n          <Route path=\"/login\" element={< Login/>} />\n          <Route path=\"/sign-up\" element={< Register/>} />\n          <Route path=\"/saved-passwords\" element={< SavedPasswords/>} />\n          <Route path=\"/save-password\" element={< SavePassword/>} />\n\n\n      </Routes>\n    </Router>\n    \n  )\n}\n\nexport default App;\n","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Generator.jsx",["69","70","71"],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Register.jsx",["72"],"import React, {useState} from 'react';\nimport './Login.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { register } from '../api/features/users';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction Register() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [errors, setErrors] = useState({});\n\n\n\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [formData, setFormData] = useState({\n      full_name: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  \n    const { full_name, email, password } = formData;\n  \n    const onChange = (e) => {\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n  \n    const onSubmit = (e) => {\n      e.preventDefault();\n      setErrors({});\n  \n      if (password !== confirmPassword) {\n        setErrors({ confirm_password: \"Password and Confirm Password do not match.\" });\n        return;\n      }\n  \n      dispatch(register({ full_name, email, password })).then(\n        (response) => {\n          if (response.error) {\n            setErrors(response.payload);\n            toast.error(response.payload);\n          }\n          else{\n            toast.success(\"Registered Successfully\");\n            navigate(\"/\")\n          }\n        }\n      );\n    };\n\n  return (\n    <div className=\"wrapper\">\n        <div className=\"container wrapper-box\">\n        <Link className='register-link' to=\"/\"> &lt; Home</Link>\n        <h2>Register</h2>\n        {errors.general && (\n        <div className=\"text-red-600 text-center mt-4 text-sm\">\n          {errors.general}\n        </div>\n      )}\n        <form onSubmit={onSubmit}>\n        <div className=\"form-container\">\n            <label>Full Name</label>\n            <input\n                type=\"text\"\n                placeholder=\"Enter your Name\"\n                autoComplete=\"off\"\n                name=\"full_name\"\n                onChange={onChange}\n                value={full_name}\n            />\n            <label>Email</label>\n            <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"off\"\n                name=\"email\"\n                onChange={onChange}\n                value={email}\n            />\n            {errors.email && (\n                <div style={{color:\"red\"}}>\n                  {errors.email}\n                </div>\n              )}\n            <label>Password</label>\n            <input\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                autoComplete=\"off\"\n                name=\"password\"\n                onChange={onChange}\n                value={password}\n            />\n            <label>Confirm Password</label>\n            <input\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                autoComplete=\"off\"\n                name=\"confirm_password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                value={confirmPassword}\n            />\n            {errors.confirm_password && (\n                <div style={{color:\"red\"}}>\n                  {errors.confirm_password}\n                </div>\n              )}\n        </div>\n        <button  type=\"submit\" className='login-button'>Sign Up</button>\n        </form>\n        <p>Already have an account? <Link className='register-link' to=\"/login\">Sign In</Link></p>\n        \n        </div>\n    </div>\n  )\n}\n\nexport default Register\n","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Login.jsx",["73","74","75","76","77"],"import React, {useState, useEffect} from 'react';\nimport './Login.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login } from '../api/features/users';\n\nfunction Login() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [errors, setErrors] = useState({});\n\n  const { loading, registered, isAuthenticated } = useSelector(state => state.user)\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e => {\n    setFormData({...formData, [e.target.name]: e.target.value });\n  }\n  \n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setErrors({});\n      const response = await dispatch(login({ email, password }));  \n      if (response.payload && response.payload.detail) {\n        setErrors(response.payload);\n        console.log('Login failed:', response.payload);\n      } else {\n        console.log(response.payload);\n        console.log('Login successful. Navigating to home.');\n        navigate('/');\n      }\n    } catch (error) {\n      console.log('Error caught:', error);\n    }\n  };  \n  \n//   useEffect(()=> {\n//     if (registered) dispatch(resetRegistered());\n//   }, [registered, dispatch]);\n\n//   useEffect(()=> {\n//     if (isAuthenticated) {\n//       navigate('/home'); \n//     } else {\n//       navigate('/'); \n//     }\n//   },[isAuthenticated, navigate]);\n  return (\n    <div className=\"wrapper\">\n        <div className=\"container wrapper-box\">\n        <Link className='register-link' to=\"/\"> &lt; Home</Link>\n        <h2>Login</h2>\n        <form onSubmit={onSubmit}>\n        <div className=\"form-container\">\n            <label>Email</label>\n            <input\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"off\"\n                name=\"email\"\n                onChange={onChange}\n                value={email}\n            />\n            <label>Password</label>\n            <input\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                autoComplete=\"off\"\n                name=\"password\"\n                onChange={onChange}\n                value={password}\n            />\n        </div>\n        <button type='submit' className='login-button'>Login</button>\n        </form>\n        <p>Don't have an account? <Link className='register-link' to=\"/sign-up\">Sign Up</Link></p>\n        \n        </div>\n    </div>\n  )\n}\n\nexport default Login\n","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\users.js",[],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\saved_password\\SavedPasswords.jsx",["78","79"],"import React, {useState, useEffect} from 'react';\nimport viewSavedPasswords from '../../api/features/viewSavedPasswords';\nimport './SavedPasswords.css';\nimport { useNavigate } from 'react-router-dom';\nimport deleteSavedPassword from '../../api/features/deleteSavedPassword';\nimport { useSelector } from 'react-redux';\nfunction SavedPasswords() {\n    const navigate = useNavigate();\n    const [passwordList, setPasswordList] = useState([]); \n    const { isAuthenticated, user } = useSelector((state) => state.user);\n    useEffect(() => {\n        const fetchData = async () => {\n            if (isAuthenticated){\n            try {\n                const response = await viewSavedPasswords(); // Assuming viewSavedPasswords is a function that fetches the data\n                console.log(\"Response:\", response); // Check the response structure returned from the API\n                setPasswordList(response.passwords); // Set the passwords array to passwordList\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        else{\n            navigate('/')\n        }\n        };\n    \n        fetchData();\n    }, []);\n\n    const deletePassword = async (passid) => {\n        try {\n            await deleteSavedPassword(passid);\n            // Assuming you want to refetch the data after deletion\n            const response = await viewSavedPasswords();\n            setPasswordList(response.passwords);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        \n        <div className=\"wrapper\">\n            {/* <h2 className='main-title'>Saved Passwords</h2> */}\n            {/* <button onClick={()=>navigate('/')}>Home</button> */}\n            <table className=\"password-table\">\n                <thead>\n                    <tr>\n                        <th>Account</th>\n                        <th>Password</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {passwordList && passwordList.map((item, key) => (\n                        <tr key={key}>\n                            <td>{item.account_type}</td>\n                            <td>{item.password}</td>\n                            <td>\n                                <button onClick={() => deletePassword(item.id)}>Delete</button> \n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default SavedPasswords;\n\n","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\saved_password\\SavePassword.jsx",["80","81","82"],"import React, { useState } from 'react'\nimport './SavePassword.css';\nimport {  useNavigate, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport savePasswords from '../../api/features/savePasswords';\nimport Generator from '../Generator';\nimport { toast } from 'react-toastify';\nfunction SavePassword() {\n    const [passwordInput, setPasswordInput] = useState('');\n    const [accounttype, setAccountType] = useState('');\n    const { isAuthenticated, user } = useSelector((state) => state.user);\n    const navigate = useNavigate();\n\n  const handlePaste = () => {\n    navigator.clipboard.readText().then(text => {\n      setPasswordInput(text);\n    }).catch(err => {\n      console.error('Failed to read clipboard contents: ', err);\n    });\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n        await savePasswords(accounttype, passwordInput);\n        toast.success('Password Saved successfully and Securely!', {\n            position: \"top-center\",\n        });\n        navigate('/saved-passwords')\n    } catch (error) {\n        toast.error('Failed to save Password!', {\n            position: \"top-center\",\n        });\n    }\n};\n    \n  return (\n    <>\n    {isAuthenticated?(\n    <div className=\"wrapper\">\n      <div className=\"container wrapper-box\">\n        <div>\n\n    </div>\n        <div className=\"password-box\">\n        <div className=\"form-container\">\n            <label>Account</label>\n            <input\n                type=\"text\"\n                placeholder=\"Gmail, Facebook, etc..\"\n                autoComplete=\"off\"\n                name=\"accounttype\"\n                value={accounttype}\n                onChange={e => setAccountType(e.target.value)}\n\n            />\n            <label>Password</label>\n            <div style={{ display: 'flex' }}>\n              <input\n                type=\"text\"\n                placeholder=\"Enter your password\"\n                autoComplete=\"off\"\n                name=\"password\"\n                value={passwordInput}\n                onChange={e => setPasswordInput(e.target.value)}\n              />\n              <button style={{border:\"none\"}} onClick={handlePaste}>Paste</button>\n            </div>\n        </div>\n        </div>\n        <br />\n\n        <div>\n          <button className=\"generate-button\" onClick={handleSubmit}>\n            Save password\n          </button>\n        \n          <div>\n\n      </div>\n        \n        </div>\n      </div>\n    </div>\n    ):(<Generator/>)\n}\n</>\n  )\n}\n\nexport default SavePassword\n","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\config.js",["83"],"const currentProtocol = window.location.protocol;\n\nconst BASE_URL = 'http://localhost:8000';\n\nexport { BASE_URL };","C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\components\\Checkbox.js",[],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\deleteSavedPassword.js",[],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\viewSavedPasswords.js",[],"C:\\Users\\Robin\\Desktop\\password_generator\\Passwordgeneratorfrontend-main\\src\\api\\features\\savePasswords.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":9,"column":26,"nodeType":"90","messageId":"91","endLine":9,"endColumn":31},{"ruleId":"88","severity":1,"message":"92","line":18,"column":9,"nodeType":"90","messageId":"91","endLine":18,"endColumn":15},{"ruleId":"88","severity":1,"message":"93","line":4,"column":11,"nodeType":"90","messageId":"91","endLine":4,"endColumn":22},{"ruleId":"88","severity":1,"message":"94","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":16},{"ruleId":"88","severity":1,"message":"95","line":16,"column":9,"nodeType":"90","messageId":"91","endLine":16,"endColumn":27},{"ruleId":"88","severity":1,"message":"96","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":1,"column":26,"nodeType":"90","messageId":"91","endLine":1,"endColumn":35},{"ruleId":"88","severity":1,"message":"98","line":10,"column":12,"nodeType":"90","messageId":"91","endLine":10,"endColumn":18},{"ruleId":"88","severity":1,"message":"99","line":12,"column":11,"nodeType":"90","messageId":"91","endLine":12,"endColumn":18},{"ruleId":"88","severity":1,"message":"100","line":12,"column":20,"nodeType":"90","messageId":"91","endLine":12,"endColumn":30},{"ruleId":"88","severity":1,"message":"101","line":12,"column":32,"nodeType":"90","messageId":"91","endLine":12,"endColumn":47},{"ruleId":"88","severity":1,"message":"102","line":10,"column":30,"nodeType":"90","messageId":"91","endLine":10,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"106"},{"ruleId":"88","severity":1,"message":"107","line":3,"column":24,"nodeType":"90","messageId":"91","endLine":3,"endColumn":28},{"ruleId":"88","severity":1,"message":"108","line":4,"column":23,"nodeType":"90","messageId":"91","endLine":4,"endColumn":34},{"ruleId":"88","severity":1,"message":"102","line":11,"column":30,"nodeType":"90","messageId":"91","endLine":11,"endColumn":34},{"ruleId":"88","severity":1,"message":"109","line":1,"column":7,"nodeType":"90","messageId":"91","endLine":1,"endColumn":22},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'access' is assigned a value but never used.","'useNavigate' is defined but never used.","'logout' is defined but never used.","'handleSavePassword' is assigned a value but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","'loading' is assigned a value but never used.","'registered' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'Link' is defined but never used.","'useDispatch' is defined but never used.","'currentProtocol' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"115","text":"116"},[1145,1147],"[isAuthenticated, navigate]"]